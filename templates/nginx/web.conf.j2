open_file_cache            max=1000 inactive=20s;
open_file_cache_valid      30s;
open_file_cache_min_uses   2;
open_file_cache_errors     on;

location / {
    try_files $uri $uri/ /index.php?kohana_uri=$uri&$args;
}

location ^~ /new/ {
    rewrite ^/new/(.*)$ /mhi_extras/new/$1 break;
}

location ^~ /index.php {
    allow all;

    try_files $uri /index.php =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

    fastcgi_pass unix:/var/run/php-fpm.sock;
    fastcgi_index index.php;
    fastcgi_read_timeout {{ php_fpm_max_execution_time }};
    client_max_body_size {{ php_fpm_upload_max_filesize }};

    include fastcgi_params;
    break;
}

# Process /mhi_extras/image.php
location ^~ /mhi_extras/ {
    allow all;
    expires max;

    try_files $uri /index.php =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

    fastcgi_pass unix:/var/run/php-fpm.sock;
    fastcgi_index index.php;
    fastcgi_read_timeout {{ php_fpm_max_execution_time }};
    client_max_body_size {{ php_fpm_upload_max_filesize }};

    include fastcgi_params;
    break;
}

location ^~/mhi_extras/new/ {
    allow all;
    expires max;
    break;
}

# Deny access to other php scripts.
location ~* \.php$ {
    deny all;
    break;
}

# Limit scheduler access.
#location /scheduler {
#        error_log off;
#        access_log off;

#        allow 127.0.0.1;
#        allow 10.179.12.196;
#        allow 10.179.12.197;
#        deny all;

#        break;
#}

# Deny /application access.
location ^~ /application {
    deny all;
    break;
}

# Deny /modules access.
location ^~ /modules {
    allow 127.0.0.1;
    deny all;
    break;
}

# Deny /system access.
location ^~ /system {
    deny all;
    break;
}

# Deny /sql access.
location ^~ /sql {
    deny all;
    break;
}

# Deny /tests access.
location ^~ /tests {
    deny all;
    break;
}

location = /readme.html {
    deny all;
    break;
}

location = /License.txt {
    deny all;
    break;
}

location = /test.html {
    deny all;
    break;
}

# Sanatize /plugin requests.
location /plugins {
    # proxy_cache_methods GET;
    # proxy_cache static;
    # proxy_cache_valid any 1d;

    # proxy_cache_bypass 0;
    # proxy_no_cache 0;

    log_not_found off;
    try_files $uri =404;
    expires max;
    break;
}

# Sanatize /media requests.
location /media {
    # proxy_cache_methods GET;
    # proxy_cache static;
    # proxy_cache_valid any 1d;

    # proxy_cache_bypass 0;
    # proxy_no_cache 0;

    log_not_found off;
    try_files $uri =404;
    expires max;
    break;
}

# Sanatize /img requests.
location /img/ {
    rewrite ^ /media/$request_uri permanent;
    break;
}
