---
- block:
  - name: install latest version of server packages
    apt: name={{ item.pkg }} state=present
    when: item.when | default(True) | bool
    with_items:
      - { pkg: memcached, when: "{{ crowdmap_memcached_enabled }}" }

  - name: create app directory
    file: path={{ crowdmap_base_path }} state=directory owner={{ deploy_user }} group={{ deploy_user }}

  - name: give deployer user access to ssh agent
    shell: |
      if [ -n "$SSH_AUTH_SOCK" ]; then
        setfacl -m u:{{ deploy_user }}:rw $SSH_AUTH_SOCK ;
        setfacl -m u:{{ deploy_user }}:x $(dirname $SSH_AUTH_SOCK)
      fi
    when: crowdmap_github_fetch_enabled

  become: true
  become_user: root

- block:
  - name: deploy app code from github
    git: repo={{ crowdmap_repo_url }} dest={{ crowdmap_base_path }} version={{ crowdmap_repo_version }} force=yes
    when: crowdmap_github_fetch_enabled

  - name: update ownership of web server writable folders
    file: path="{{ crowdmap_base_path }}/{{ item }}" state=directory mode=ugo+rwx owner={{ www_user }} group={{ www_group }} recurse=yes
    with_items:
      - media/uploads
      - application/cache
      - application/logs
    become: true
    become_user: root

  - name: copy config files
    template: src="templates/config-{{ item }}.php.j2" dest="{{ crowdmap_base_path }}/application/config/{{ item }}.php"
    with_items:
      - cache
      - cache_memcache
      - cdn
      - cookie
      - encryption
      - mhi
      - riverid
      - session

  - name: copy mhi_extras config files
    template: src="templates/mhi_extras-{{ item }}.php.j2" dest="{{ crowdmap_base_path }}/mhi_extras/{{ item }}.php"
    with_items:
      - db

  - name: copy mhi config files
    template: src="templates/mhi-{{ item }}.php.j2" dest="{{ crowdmap_base_path }}/modules/mhi/config/{{ item }}.php"
    with_items:
      - database

  become: true
  become_user: "{{ deploy_user }}"
